"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _netlifyIdentityWidget = _interopRequireDefault(require("netlify-identity-widget"));

var _auth = require("../utils/auth");

_netlifyIdentityWidget.default.init();

var LoginWrapper = function LoginWrapper(_ref) {
  var element = _ref.element;

  var _useState = (0, _react.useState)((0, _auth.getCurrentUser)()),
      user = _useState[0],
      setUser = _useState[1];

  var _useState2 = (0, _react.useState)((0, _auth.isLoggedIn)()),
      isLoggedIn = _useState2[0],
      setIsLoggedIn = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      isModalOpen = _useState3[0],
      setIsModalOpen = _useState3[1];

  var _useState4 = (0, _react.useState)(''),
      error = _useState4[0],
      setError = _useState4[1];

  _netlifyIdentityWidget.default.on('init', function () {
    return setIsLoggedIn((0, _auth.isLoggedIn)());
  });

  _netlifyIdentityWidget.default.on('login', function (currentUser) {
    setUser(currentUser);
    setIsLoggedIn(true);
  });

  _netlifyIdentityWidget.default.on('logout', function () {
    return setIsLoggedIn(false);
  });

  _netlifyIdentityWidget.default.on('error', function (err) {
    return setError(err);
  });

  _netlifyIdentityWidget.default.on('open', function () {
    return setIsModalOpen(true);
  });

  _netlifyIdentityWidget.default.on('close', function () {
    return setIsModalOpen(false);
  });

  function login() {
    _netlifyIdentityWidget.default.open();
  }

  function logout() {
    _netlifyIdentityWidget.default.logout();
  }

  var ele = _react.default.cloneElement(element, {
    netlifyLogin: login,
    netlifyLogout: logout,
    netlifyAdminStatus: {
      user: user,
      isLoggedIn: isLoggedIn,
      isModalOpen: isModalOpen,
      error: error
    }
  });

  return ele;
};

var _default = LoginWrapper;
exports.default = _default;