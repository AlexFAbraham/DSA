{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/templates/tag-posts.js","webpack:///./src/components/Post.js","webpack:///./src/util/utilityFunctions.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","tagQuery","tagPosts","data","pageContext","totalCount","allMarkdownRemark","pageHeader","pageTitle","edges","map","node","key","id","slug","fields","title","frontmatter","author","date","body","excerpt","tags","fluid","image","childImageSharp","Post","to","slugify","module","exports","text","toString","toLowerCase","replace","CardSubtitle"],"mappings":"8FAAA,kFAWIA,EAAQ,SAAeC,GACzB,IAAIC,EAAYD,EAAMC,UAClBC,EAAYF,EAAME,UAClBC,EAAQH,EAAMG,MACdC,EAAWJ,EAAMI,SACjBC,EAAOL,EAAMK,KACbC,EAAMN,EAAMO,IACZC,EAAa,YAA8BR,EAAO,CAAC,YAAa,YAAa,QAAS,WAAY,OAAQ,QAE1GS,EAAU,YAAgB,IAAWR,EAAW,QAAS,SAAWE,IAAOE,GAAO,cAAuBH,GAM7G,OAJIM,EAAWE,MAAgB,SAARJ,IACrBA,EAAM,KAGY,IAAMK,cAAcL,EAAK,YAAS,GAAIE,EAAY,CACpEP,UAAWQ,EACXG,IAAKR,MAITL,EAAMc,aA3Ba,CACjBV,MAAO,YACPE,MAAM,EACNE,IAAK,QAyBQ,O,oCCjCf,iGAyCaO,EAAQ,YAiCNC,UAjEE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KACVT,EADkC,EAAlBU,YAChBV,IACAW,EAAeF,EAAKG,kBAApBD,WACFE,EAAgBF,EAAN,SACC,IAAfA,EAAmB,GAAK,KADV,iBAECX,EAFD,IAKhB,OAGE,kBAAC,IAAD,CAAQc,UAAWD,GAGhBJ,EAAKG,kBAAkBG,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CACEC,IAAKD,EAAKE,GACVC,KAAMH,EAAKI,OAAOD,KAClBE,MAAOL,EAAKM,YAAYD,MACxBE,OAAQP,EAAKM,YAAYC,OACzBC,KAAMR,EAAKM,YAAYE,KACvBC,KAAMT,EAAKU,QACXC,KAAMX,EAAKM,YAAYK,KACvBC,MAAOZ,EAAKM,YAAYO,MAAMC,gBAAgBF,c,kCChCxD,8IAiDeG,IAnCF,SAAC,GAAD,IAAGV,EAAH,EAAGA,MAAOE,EAAV,EAAUA,OAAQJ,EAAlB,EAAkBA,KAAMK,EAAxB,EAAwBA,KAAMC,EAA9B,EAA8BA,KAAMG,EAApC,EAAoCA,MAAOD,EAA3C,EAA2CA,KAA3C,OACX,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMK,GAAE,IAAMb,EAAN,KACN,kBAAC,IAAD,CAAK1B,UAAU,iBAAiBmC,MAAOA,KAEzC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,OAAD,CAAMI,GAAE,IAAMb,EAAN,KAAgBE,IAE1B,kBAAC,IAAD,KACE,0BAAM5B,UAAU,aAAa+B,GAD/B,MAC+C,IAC7C,0BAAM/B,UAAU,aAAa8B,IAE/B,kBAAC,IAAD,KAAWE,GACX,wBAAIhC,UAAU,aACXkC,EAAKZ,KAAI,SAAAhB,GAAG,OACX,wBAAIkB,IAAKlB,GACP,kBAAC,OAAD,CAAMiC,GAAE,QAAUC,kBAAQlC,IACxB,kBAAC,IAAD,CAAOJ,MAAM,UAAUF,UAAU,kBAC9BM,SAMX,kBAAC,OAAD,CACEiC,GAAE,IAAMb,EAAN,IACF1B,UAAU,sDAFZ,iB,qBC1BNyC,EAAOC,QAAU,CAAEF,QAbH,SAASG,GACvB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,kCCRpB,kFASIC,EAAe,SAAsBhD,GACvC,IAAIC,EAAYD,EAAMC,UAClBC,EAAYF,EAAME,UAClBI,EAAMN,EAAMO,IACZC,EAAa,YAA8BR,EAAO,CAAC,YAAa,YAAa,QAE7ES,EAAU,YAAgB,IAAWR,EAAW,iBAAkBC,GACtE,OAAoB,IAAMS,cAAcL,EAAK,YAAS,GAAIE,EAAY,CACpEP,UAAWQ,MAIfuC,EAAanC,aAhBM,CACjBN,IAAK,OAgBQ","file":"component---src-templates-tag-posts-js-7ba4b9bef19f8c81fb23.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport Post from '../components/Post'\r\n//import {Col,Row} from 'reactstrap';\r\n//import Sidebar from '../components/Sidebar'\r\n\r\n\r\n\r\nconst tagPosts = ({ data, pageContext }) => {\r\n  const { tag } = pageContext\r\n  const { totalCount } = data.allMarkdownRemark\r\n  const pageHeader = `${totalCount} post${\r\n    totalCount === 1 ? '' : 's'\r\n  } tagged with \"${tag}\"`\r\n\r\n \r\n  return (\r\n\r\n    \r\n    <Layout pageTitle={pageHeader}>\r\n        \r\n       \r\n      {data.allMarkdownRemark.edges.map(({ node }) => (\r\n        <Post\r\n          key={node.id}\r\n          slug={node.fields.slug}\r\n          title={node.frontmatter.title}\r\n          author={node.frontmatter.author}\r\n          date={node.frontmatter.date}\r\n          body={node.excerpt}\r\n          tags={node.frontmatter.tags}\r\n          fluid={node.frontmatter.image.childImageSharp.fluid}\r\n        />\r\n      ))}\r\n\r\n       \r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const tagQuery = graphql`\r\n  query($tag: String!) {\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM Do YYYY\")\r\n            author\r\n            tags\r\n            image {\r\n              childImageSharp {\r\n                fluid(maxWidth: 650, maxHeight: 371) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n          excerpt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default tagPosts","import React from 'react'\r\nimport {\r\n  Badge,\r\n  Card,\r\n  CardTitle,\r\n  CardText,\r\n  CardSubtitle,\r\n  CardBody,\r\n} from 'reactstrap'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\nimport { slugify } from '../util/utilityFunctions'\r\n\r\n\r\nconst Post = ({ title, author, slug, date, body, fluid, tags }) => (\r\n  <Card>\r\n    <Link to={`/${slug}/`}>\r\n      <Img className=\"card-image-top\" fluid={fluid} />\r\n    </Link>\r\n    <CardBody>\r\n      <CardTitle>\r\n        <Link to={`/${slug}/`}>{title}</Link>\r\n      </CardTitle>\r\n      <CardSubtitle>\r\n        <span className=\"text-info\">{date}</span> by{' '}\r\n        <span className=\"text-info\">{author}</span>\r\n      </CardSubtitle>\r\n      <CardText>{body}</CardText>\r\n      <ul className=\"post-tags\">\r\n        {tags.map(tag => (\r\n          <li key={tag}>\r\n            <Link to={`/tag/${slugify(tag)}`}>\r\n              <Badge color=\"primary\" className=\"text-uppercase\">\r\n                {tag}\r\n              </Badge>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <Link\r\n        to={`/${slug}/`}\r\n        className=\"btn btn-outline-primary float-right text-uppercase\"\r\n      >\r\n        Read more\r\n      </Link>\r\n    </CardBody>\r\n  </Card>\r\n)\r\n\r\nexport default Post","const slugify = function(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, '-')       // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n    .replace(/--+/g, '-')       // Replace multiple - with single -\r\n    .replace(/^-+/, '')         // Trim - from start of text\r\n    .replace(/-+$/, '')         // Trim - from end of text\r\n}\r\n//Web Design => web-design\r\n//web design => web-design\r\n\r\nmodule.exports = { slugify }","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;"],"sourceRoot":""}