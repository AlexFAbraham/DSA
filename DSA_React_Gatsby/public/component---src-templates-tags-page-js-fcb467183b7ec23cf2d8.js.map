{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/util/utilityFunctions.js","webpack:///./src/templates/tags-page.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","module","exports","slugify","text","toString","toLowerCase","replace","tagsPage","pageContext","tags","tagPostCounts","pageTitle","title","keywords","map","key","style","marginBottom"],"mappings":"8FAAA,kFAWIA,EAAQ,SAAeC,GACzB,IAAIC,EAAYD,EAAMC,UAClBC,EAAYF,EAAME,UAClBC,EAAQH,EAAMG,MACdC,EAAWJ,EAAMI,SACjBC,EAAOL,EAAMK,KACbC,EAAMN,EAAMO,IACZC,EAAa,YAA8BR,EAAO,CAAC,YAAa,YAAa,QAAS,WAAY,OAAQ,QAE1GS,EAAU,YAAgB,IAAWR,EAAW,QAAS,SAAWE,IAAOE,GAAO,cAAuBH,GAM7G,OAJIM,EAAWE,MAAgB,SAARJ,IACrBA,EAAM,KAGY,IAAMK,cAAcL,EAAK,YAAS,GAAIE,EAAY,CACpEP,UAAWQ,EACXG,IAAKR,MAITL,EAAMc,aA3Ba,CACjBV,MAAO,YACPE,MAAM,EACNE,IAAK,QAyBQ,O,qBCpBfO,EAAOC,QAAU,CAAEC,QAbH,SAASC,GACvB,OAAOA,EACJC,WACAC,cACAC,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,IACpBA,QAAQ,OAAQ,KAChBA,QAAQ,MAAO,IACfA,QAAQ,MAAO,O,kCCRpB,4FAwBeC,UAlBE,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACVC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,cACd,OACE,kBAAC,IAAD,CAAQC,UAAU,YAChB,kBAAC,IAAD,CAAKC,MAAM,WAAWC,SAAU,CAAC,OAAQ,YACzC,4BACGJ,EAAKK,KAAI,SAAArB,GAAG,OACX,wBAAIsB,IAAKtB,EAAKuB,MAAO,CAAEC,aAAc,SACnC,kBAAC,IAAD,CAAQ5B,MAAM,UAAUO,KAAI,QAAUM,kBAAQT,IAC3CA,EADH,IACQ,kBAAC,IAAD,CAAOJ,MAAM,SAASqB,EAAcjB","file":"component---src-templates-tags-page-js-fcb467183b7ec23cf2d8.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","const slugify = function(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, '-')       // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n    .replace(/--+/g, '-')       // Replace multiple - with single -\r\n    .replace(/^-+/, '')         // Trim - from start of text\r\n    .replace(/-+$/, '')         // Trim - from end of text\r\n}\r\n//Web Design => web-design\r\n//web design => web-design\r\n\r\nmodule.exports = { slugify }","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport { Badge, Button } from 'reactstrap'\r\nimport { slugify } from '../util/utilityFunctions'\r\n\r\nconst tagsPage = ({ pageContext }) => {\r\n  const { tags, tagPostCounts } = pageContext\r\n  return (\r\n    <Layout pageTitle=\"All tags\">\r\n      <SEO title=\"All tags\" keywords={['tags', 'topics']} />\r\n      <ul>\r\n        {tags.map(tag => (\r\n          <li key={tag} style={{ marginBottom: '10px' }}>\r\n            <Button color=\"primary\" href={`/tag/${slugify(tag)}`}>\r\n              {tag} <Badge color=\"light\">{tagPostCounts[tag]}</Badge>\r\n            </Button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default tagsPage"],"sourceRoot":""}