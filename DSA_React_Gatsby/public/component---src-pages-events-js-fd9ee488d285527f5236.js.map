{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./node_modules/reactstrap/es/CardText.js","webpack:///./src/components/Post.js","webpack:///./src/components/Calender.js","webpack:///./src/pages/events.js","webpack:///./src/util/utilityFunctions.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","Post","title","author","slug","date","body","fluid","tags","Card","to","CardBody","CardTitle","CardSubtitle","map","key","slugify","Calender","eventsQuery","EventsPage","md","query","render","data","allMarkdownRemark","edges","node","id","frontmatter","fields","excerpt","image","childImageSharp","module","exports","text","toString","toLowerCase","replace"],"mappings":"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","file":"component---src-pages-events-js-fd9ee488d285527f5236.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.defaultProps = defaultProps;\nexport default CardText;","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {Badge, Card, CardTitle, CardText, CardSubtitle, CardBody} from 'reactstrap'\r\nimport Img from 'gatsby-image'\r\nimport {slugify} from '../util/utilityFunctions'\r\n\r\nconst Post = ({title, author, slug, date, body, fluid, tags}) => {\r\n    return(\r\n        <Card>\r\n            <Link to={slug}>\r\n            <Img className =\"card-image-top\" fluid={fluid}/>\r\n            </Link>\r\n            <CardBody>\r\n                <CardTitle>\r\n                   <Link to={slug}>{title}</Link>\r\n                </CardTitle>\r\n                <CardSubtitle>\r\n    <span className = \"text-info\">{date}</span> by {' '} \r\n    <span className = \"text-info\">{author}</span> \r\n\r\n                </CardSubtitle>\r\n                <CardText>{body}</CardText>\r\n                <ul className =\"post-tags\">\r\n                    {tags.map(tag =>(\r\n                        <li key={tag}>\r\n                            <Link to={`/tag/${slugify(tag)}`}>\r\n                    <Badge color=\"primary\">{tag}</Badge>\r\n                            </Link>\r\n                         </li>   \r\n                    ))}\r\n                </ul>\r\n                <Link \r\n                to={slug} \r\n                className=\"btn btn-outline-primary float-right\">Read More\r\n                </Link>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\nexport default Post","import React from 'react'\r\nimport {Card, CardTitle, CardBody} from 'reactstrap'\r\n//import { graphql, Link, StaticQuery } from 'gatsby'\r\n//import Img from 'gatsby-image'\r\n\r\nconst Calender = () => (\r\n    <div>\r\n       <Card>\r\n        <CardBody>\r\n            <CardTitle className = \"text-center text-uppercase mb-3\">\r\n                Calender\r\n                <br/><br/><br/><br/>\r\n\r\n            </CardTitle>\r\n        \r\n        </CardBody>\r\n       </Card>\r\n       \r\n    \r\n    </div>\r\n)\r\n\r\nexport default Calender","\r\nimport React from \"react\"\r\n//import { Link } from \"gatsby\"\r\nimport { graphql, StaticQuery} from 'gatsby'\r\nimport Post from '../components/Post'\r\nimport {Row, Col} from 'reactstrap';\r\n//import Sidebar from '../components/Sidebar'\r\nimport Calender from '../components/Calender'\r\n\r\n\r\nimport Layout from \"../components/layout\"\r\n//import Image from \"../components/image\"\r\nimport SEO from \"../components/seo\"\r\n//import { Row } from \"reactstrap\"\r\n\r\nconst EventsPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Events\" />\r\n    <h1>Events Page</h1>\r\n    <Row>\r\n     <Col md=\"2\"></Col>\r\n\r\n      <Col md=\"6\">\r\n      <StaticQuery \r\n    query ={eventsQuery }\r\n    render = {data => {\r\n      return(\r\n        <div>\r\n          {data.allMarkdownRemark.edges.map(({node}) => (\r\n            <Post \r\n              key={node.id}\r\n            title = {node.frontmatter.title}\r\n            author={node.frontmatter.author}\r\n            slug = {node.fields.slug}\r\n            tags = {node.frontmatter.tags}\r\n            date = {node.frontmatter.date}\r\n            body = {node.excerpt}\r\n            fluid = {node.frontmatter.image.childImageSharp.fluid}/>\r\n          ))}\r\n        </div>\r\n      )\r\n    }}\r\n    \r\n    />\r\n\r\n      </Col>\r\n      <Col md=\"4\">\r\n        <div>\r\n          <Calender/>\r\n          </div>\r\n      </Col>\r\n    </Row>\r\n    \r\n     </Layout>\r\n)\r\n\r\nconst eventsQuery = graphql`\r\nquery{\r\n  allMarkdownRemark(sort:{ fields: [frontmatter___date], order: DESC}){\r\n    edges{\r\n      node{\r\n        id\r\n        frontmatter{\r\n          title\r\n          date(formatString: \"MMM Do YYYY\") \r\n          author\r\n          tags\r\n          image{\r\n            childImageSharp{\r\n              fluid(maxWidth: 600){\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n            }\r\n            \r\n          } \r\n          \r\n        }\r\n        fields{\r\n          slug\r\n        }\r\n        \r\n        excerpt\r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default EventsPage\r\n","const slugify = function(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, '-')       // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n    .replace(/--+/g, '-')       // Replace multiple - with single -\r\n    .replace(/^-+/, '')         // Trim - from start of text\r\n    .replace(/-+$/, '')         // Trim - from end of text\r\n}\r\n//Web Design => web-design\r\n//web design => web-design\r\n\r\nmodule.exports = { slugify }","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;"],"sourceRoot":""}