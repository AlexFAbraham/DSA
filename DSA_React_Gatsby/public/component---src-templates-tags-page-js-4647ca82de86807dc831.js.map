{"version":3,"sources":["webpack:///./node_modules/reactstrap/es/Badge.js","webpack:///./src/util/utilityFunctions.js","webpack:///./src/templates/tags-page.js","webpack:///./node_modules/reactstrap/es/Button.js"],"names":["Badge","props","className","cssModule","color","innerRef","pill","Tag","tag","attributes","classes","href","createElement","ref","defaultProps","module","exports","slugify","text","toString","toLowerCase","replace","tagsPage","pageContext","tags","tagPostCounts","pageTitle","title","keywords","map","key","style","marginBottom","Button","_React$Component","_this","call","this","onClick","bind","_proto","prototype","e","disabled","preventDefault","render","_this$props","active","ariaLabel","block","close","outline","size","children","btnOutlineColor","defaultAriaLabel","type","undefined","Component"],"mappings":"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","file":"component---src-templates-tags-page-js-4647ca82de86807dc831.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  pill: false,\n  tag: 'span'\n};\n\nvar Badge = function Badge(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      innerRef = props.innerRef,\n      pill = props.pill,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"innerRef\", \"pill\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'badge', 'badge-' + color, pill ? 'badge-pill' : false), cssModule);\n\n  if (attributes.href && Tag === 'span') {\n    Tag = 'a';\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nBadge.defaultProps = defaultProps;\nexport default Badge;","const slugify = function(text) {\r\n  return text\r\n    .toString()\r\n    .toLowerCase()\r\n    .replace(/\\s+/g, '-')       // Replace spaces with -\r\n    .replace(/[^\\w-]+/g, '')    // Remove all non-word chars\r\n    .replace(/--+/g, '-')       // Replace multiple - with single -\r\n    .replace(/^-+/, '')         // Trim - from start of text\r\n    .replace(/-+$/, '')         // Trim - from end of text\r\n}\r\n//Web Design => web-design\r\n//web design => web-design\r\n\r\nmodule.exports = { slugify }","import React from 'react'\r\nimport Layout from '../components/layout'\r\nimport SEO from '../components/seo'\r\nimport {Badge, Button} from 'reactstrap'\r\nimport {slugify} from '../util/utilityFunctions'\r\n\r\nconst tagsPage = ({pageContext}) =>  {\r\n      const {tags, tagPostCounts} = pageContext\r\n    return( \r\n        <Layout pageTitle=\"App tags\">\r\n            <SEO title = \"All tags\" keywords={['tags','topics']}/>\r\n            <ul>\r\n                {tags.map(tag => (\r\n                    <li key ={tag} style={{marginBottom: '10px'}}> \r\n                    <Button color= \"primary\" href={`/tag/${slugify(tag)}`}>\r\n                {tag} <Badge color = \"light\">{tagPostCounts[tag]}</Badge>\r\n                    </Button>\r\n                        </li>\r\n                ))}\r\n            </ul>\r\n            \r\n        </Layout>\r\n\r\n )     \r\n                }    \r\n\r\nexport default tagsPage","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.defaultProps = defaultProps;\nexport default Button;"],"sourceRoot":""}